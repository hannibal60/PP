/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import modelo.ConexionLog;
import Interfaz.Ventana_Paciente;

/**
 *
 * @author ningu
 */
public class ConsultaPaciente extends javax.swing.JFrame {

    Connection con;
    PreparedStatement st;
    String NombreP;
    int Filas = 0;
    Object[] Fila = new Object[15];
    public static String nombre, Folio2, Curp2, Fecha_Naci2, Telefono2, Municipio2, Colonia2, Calle2, Numero2, Religion2, Trabajo2, Sexo2, Tipo_Sangre2;

    /**
     * Creates new form Consultamedico
     */
    public ConsultaPaciente() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelDiseño3 = new javax.swing.JPanel();
        jButtoncerrar = new javax.swing.JButton();
        jButtoncerrar1 = new javax.swing.JButton();
        jButtonminimizar1 = new javax.swing.JButton();
        jLabelTitulo2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelDiseño3.setBackground(new java.awt.Color(96, 83, 150));

        jButtoncerrar.setBackground(new java.awt.Color(255, 255, 255));
        jButtoncerrar.setBorder(null);
        jButtoncerrar.setBorderPainted(false);
        jButtoncerrar.setContentAreaFilled(false);
        jButtoncerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtoncerrar.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jButtoncerrar1.setBackground(new java.awt.Color(255, 255, 255));
        jButtoncerrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        jButtoncerrar1.setBorder(null);
        jButtoncerrar1.setBorderPainted(false);
        jButtoncerrar1.setContentAreaFilled(false);
        jButtoncerrar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtoncerrar1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jButtoncerrar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtoncerrar1MouseClicked(evt);
            }
        });

        jButtonminimizar1.setBackground(new java.awt.Color(255, 255, 255));
        jButtonminimizar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/minimizar.png"))); // NOI18N
        jButtonminimizar1.setBorderPainted(false);
        jButtonminimizar1.setContentAreaFilled(false);
        jButtonminimizar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonminimizar1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jButtonminimizar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonminimizar1MouseClicked(evt);
            }
        });

        jLabelTitulo2.setBackground(new java.awt.Color(255, 255, 255));
        jLabelTitulo2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelTitulo2.setForeground(new java.awt.Color(181, 77, 180));
        jLabelTitulo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulo2.setText("CONSULTA POR NOMBRE");

        javax.swing.GroupLayout jPanelDiseño3Layout = new javax.swing.GroupLayout(jPanelDiseño3);
        jPanelDiseño3.setLayout(jPanelDiseño3Layout);
        jPanelDiseño3Layout.setHorizontalGroup(
            jPanelDiseño3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDiseño3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtoncerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonminimizar1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtoncerrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(jPanelDiseño3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitulo2, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDiseño3Layout.setVerticalGroup(
            jPanelDiseño3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDiseño3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDiseño3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtoncerrar1)
                    .addComponent(jButtonminimizar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtoncerrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitulo2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        TNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TNombreActionPerformed(evt);
            }
        });
        TNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TNombreKeyTyped(evt);
            }
        });

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TablaMouseReleased(evt);
            }
        });
        Tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TablaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla);

        jLabel1.setText("Nombre del Paciente:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(TNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(TNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelDiseño3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelDiseño3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtoncerrar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtoncerrar1MouseClicked
        this.dispose();
    }//GEN-LAST:event_jButtoncerrar1MouseClicked

    private void jButtonminimizar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonminimizar1MouseClicked
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jButtonminimizar1MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//    try {
        //Vacía el modelo de la tabla y la reinicia.
        DefaultTableModel modelo = (DefaultTableModel) Tabla.getModel();

        modelo.setRowCount(0);
        Tabla.setModel(modelo);

        //Llenar la tabla con las columnas
        modelo.addColumn("Nombre_Completo");
        modelo.addColumn("Folio");
        modelo.addColumn("Curp");
        modelo.addColumn("Fecha_Naci");
        modelo.addColumn("Telefono");
        modelo.addColumn("Municipio");
        modelo.addColumn("Colonia");
        modelo.addColumn("Calle");
        modelo.addColumn("Numero");
        modelo.addColumn("Religion");
        modelo.addColumn("Trabajo");
        modelo.addColumn("Sexo");
        modelo.addColumn("Tipo_Sangre");

        try {
            con = ConexionLog.getConexion();

            st = con.prepareStatement("SELECT Nombre_Completo,Folio,Curp,Fecha_Naci,Telefono,Municipio,Colonia,Calle,Numero,Religion,Trabajo,Sexo,Tipo_Sangre FROM datos_paciente");
            ResultSet resultado = st.executeQuery();

            while (resultado.next()) {
                //  Filas++;

                String Nombre = resultado.getString("Nombre_Completo");
                Fila[Filas] = Nombre;
                Filas++;
                String Folio = resultado.getString("Folio");
                Fila[Filas] = Folio;
                Filas++;
                String Curp = resultado.getString("Curp");
                Fila[Filas] = Curp;
                Filas++;
                String Fecha = resultado.getString("Fecha_Naci");
                Fila[Filas] = Fecha;
                Filas++;
                String Telefono = resultado.getString("Telefono");
                Fila[Filas] = Telefono;
                Filas++;
                String Municipio = resultado.getString("Municipio");
                Fila[Filas] = Municipio;
                Filas++;
                String Colonia = resultado.getString("Colonia");
                Fila[Filas] = Colonia;
                Filas++;
                String Calle = resultado.getString("Calle");
                Fila[Filas] = Calle;
                Filas++;
                String Numero = resultado.getString("Numero");
                Fila[Filas] = Numero;
                Filas++;
                String Religion = resultado.getString("Religion");
                Fila[Filas] = Religion;
                Filas++;
                String Trabajo = resultado.getString("Trabajo");
                Fila[Filas] = Trabajo;
                Filas++;
                String Sexo = resultado.getString("Sexo");
                Fila[Filas] = Sexo;
                Filas++;
                String Tipo_Sangre = resultado.getString("Tipo_Sangre");
                Fila[Filas] = Tipo_Sangre;
                Filas = 0;
                System.out.println("Nombre_Completo" + Nombre + " Folio " + Folio + " Curp " + Curp + "Fecha_Naci" + Fecha + " Telefono " + Telefono
                        + "Municipio" + Municipio + "Colonia" + Colonia + "Calle" + Calle + "Numero" + Numero + "Religion" + Religion + "Trabajo" + Trabajo + " Sexo " + Sexo + "Tipo_Sangre" + Tipo_Sangre);

                modelo.addRow(Fila);
                Filas = 0;

            }
            Filas = 0;
            Tabla.setModel(modelo);// TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
//Seleccionar los datos de la tabla que requerimos
//con=Conectar.Conectar();
//
//st=con.prepareStatement("SELECT Nombre_Paciente, id_Paciente FROM  pacientes, medicos WHERE medico= '"+NombreP+"'"); 
//
//// TODO add your handling code here:
//    } catch (SQLException ex) {
//        Logger.getLogger(Consultamedico.class.getName()).log(Level.SEVERE, null, ex);
//    }
//Seleccionar los datos de la tabla que requerimos
//con=Conectar.Conectar();
//
//st=con.prepareStatement("SELECT Nombre_Paciente, id_Paciente FROM  pacientes, medicos WHERE medico= '"+NombreP+"'"); 
//
//// TODO add your handling code here:
//    } catch (SQLException ex) {
//        Logger.getLogger(Consultamedico.class.getName()).log(Level.SEVERE, null, ex);
//    }


    }//GEN-LAST:event_formWindowOpened

    private void TNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TNombreKeyTyped

        DefaultTableModel modelo = (DefaultTableModel) Tabla.getModel();

        modelo.setRowCount(0);
        Tabla.setModel(modelo);
        String Busqueda = TNombre.getText();

        try {
            con = ConexionLog.getConexion();

            st = con.prepareStatement("SELECT Nombre_Completo,Folio,Curp,Fecha_Naci,Telefono,Municipio,Colonia,Calle,Numero,Religion,Trabajo,Sexo,Tipo_Sangre FROM datos_paciente WHERE Nombre_Completo LIKE '%" + Busqueda + "%'");
            ResultSet resultado = st.executeQuery();

            while (resultado.next()) {
                //  Filas++;

                String Nombre = resultado.getString("Nombre_Completo");
                Fila[Filas] = Nombre;
                Filas++;
                String Folio = resultado.getString("Folio");
                Fila[Filas] = Folio;
                Filas++;
                String Curp = resultado.getString("Curp");
                Fila[Filas] = Curp;
                Filas++;
                String Fecha = resultado.getString("Fecha_Naci");
                Fila[Filas] = Fecha;
                Filas++;
                int Telefono = resultado.getInt("Telefono");
                Fila[Filas] = Telefono;
                Filas++;
                String Municipio = resultado.getString("Municipio");
                Fila[Filas] = Municipio;
                Filas++;
                String Colonia = resultado.getString("Colonia");
                Fila[Filas] = Colonia;
                Filas++;
                String Calle = resultado.getString("Calle");
                Fila[Filas] = Calle;
                Filas++;
                String Numero = resultado.getString("Numero");
                Fila[Filas] = Numero;
                Filas++;
                String Religion = resultado.getString("Religion");
                Fila[Filas] = Religion;
                Filas++;
                String Trabajo = resultado.getString("Trabajo");
                Fila[Filas] = Trabajo;
                Filas++;
                String Sexo = resultado.getString("Sexo");
                Fila[Filas] = Sexo;
                Filas++;
                String Tipo_Sangre = resultado.getString("Tipo_Sangre");
                Fila[Filas] = Tipo_Sangre;
                Filas = 0;
                System.out.println("Nombre_Completo" + Nombre + " Folio " + Folio + " Curp " + Curp + "Fecha_Naci" + Fecha + " Telefono " + Telefono
                        + "Municipio" + Municipio + "Colonia" + Colonia + "Calle" + Calle + "Numero" + Numero + "Religion" + Religion + "Trabajo" + Trabajo + "Sexo " + Sexo + "Tipo_Sangre" + Tipo_Sangre);

                modelo.addRow(Fila);
                Filas = 0;

            }
            Filas = 0;
            Tabla.setModel(modelo);// TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TNombreKeyTyped

    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
  int fila = Tabla.getSelectedRow();
        String dato = Tabla.getValueAt(fila, 0).toString();
       
        
        try {
            con = ConexionLog.getConexion();
            PreparedStatement ps;
            ps = con.prepareStatement("SELECT Nombre_Completo,Folio,Curp,Fecha_Naci,Telefono,Municipio,Colonia,Calle,Numero,Religion,Trabajo,Sexo,Tipo_Sangre FROM datos_paciente WHERE Nombre_Completo LIKE '" + dato + "'");
            ResultSet resultado = ps.executeQuery();
            if (resultado.next()) {
                nombre = resultado.getString("Nombre_Completo");
                Folio2 = resultado.getString("Folio");
                Curp2 = resultado.getString("Curp");
                Fecha_Naci2 = resultado.getString("Fecha_Naci");
                Telefono2 = resultado.getString("Telefono");
                Municipio2 = resultado.getString("Municipio");
                Colonia2 = resultado.getString("Colonia");
                Calle2 = resultado.getString("Calle");
                Numero2 = resultado.getString("Numero");
                Religion2 = resultado.getString("Religion");
                Trabajo2 = resultado.getString("Trabajo");
                Sexo2 = resultado.getString("Sexo");
                Tipo_Sangre2 = resultado.getString("Tipo_Sangre");
//Calle,Numero,Religion,Trabajo,Sexo,Tipo_Sangre
            }
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      
    }//GEN-LAST:event_TablaMouseClicked

    private void TablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMousePressed

    }//GEN-LAST:event_TablaMousePressed

    private void TablaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseReleased
// // TODO add your handling code here:
   
    }//GEN-LAST:event_TablaMouseReleased

    private void TablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaKeyPressed
      
    }//GEN-LAST:event_TablaKeyPressed

    private void TNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TNombre;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton jButtoncerrar;
    private javax.swing.JButton jButtoncerrar1;
    private javax.swing.JButton jButtonminimizar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelTitulo2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelDiseño3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
